{
  "name": "business-assistant",
  "nodes": [
    {
      "parameters": {
        "model": {
          "__rl": true,
          "value": "gpt-4o-mini",
          "mode": "list",
          "cachedResultName": "gpt-4o-mini"
        },
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1.2,
      "position": [
        3136,
        416
      ],
      "id": "52d45ee3-be27-4fcb-93f7-d89ff049f007",
      "name": "OpenAI Chat Model",
      "credentials": {
        "openAiApi": {
          "id": "leOLHYOtXey0DgzA",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "httpMethod": "POST",
        "path": "75f0c215-3bcb-4f48-ae3e-f4518a3f2b3d",
        "options": {}
      },
      "type": "n8n-nodes-base.webhook",
      "typeVersion": 2,
      "position": [
        224,
        384
      ],
      "id": "a6b4f3d9-119d-4962-a28d-86dcd142d52b",
      "name": "Chatwoot",
      "webhookId": "75f0c215-3bcb-4f48-ae3e-f4518a3f2b3d"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "180eac52-f6df-4be5-b8af-d79424d92569",
              "name": "flowdata.project_name",
              "value": "el_asesor",
              "type": "string"
            },
            {
              "id": "91d10cd7-a44f-42c9-9a76-fdf38e5778ea",
              "name": "flowdata.url",
              "value": "https://services-chatwoot.qn7hmw.easypanel.host",
              "type": "string"
            },
            {
              "id": "48270303-fb7d-4a88-8a75-f261f40b616a",
              "name": "flowdata.repo",
              "value": "n8n-infra",
              "type": "string"
            },
            {
              "id": "8bb15ae9-aaa0-4b2f-bfb5-a277f4dae582",
              "name": "flowdata.incoming",
              "value": "={{ $json.body.message_type == \"incoming\" }}",
              "type": "boolean"
            },
            {
              "id": "e24befd1-922a-42fc-80b4-ad26331ed110",
              "name": "flowdata.human-pause",
              "value": "={{ $json.body.conversation.labels.includes(\"human-pause\") }}",
              "type": "boolean"
            },
            {
              "id": "25093dd1-cee2-47ab-a60b-6d8f8739ca7d",
              "name": "flowdata.human",
              "value": "={{ $json.body.conversation.labels.includes(\"human\") }}",
              "type": "boolean"
            },
            {
              "id": "8987c1d9-84f2-477e-84fe-3d161c32cb57",
              "name": "flowdata.admin",
              "value": "={{ $json.body.conversation.labels.includes(\"admin\") }}",
              "type": "boolean"
            },
            {
              "id": "f0778a22-c8b5-4e66-b548-902224c03e5c",
              "name": "flowdata.account_id",
              "value": "={{ $json.body.account.id }}",
              "type": "number"
            },
            {
              "id": "8c10811b-3923-4b22-b868-fec06fa856ed",
              "name": "flowdata.conversation_id",
              "value": "={{ $json.body.conversation.messages[0].conversation_id }}",
              "type": "number"
            },
            {
              "id": "6ef36fd7-bef2-4f0d-a5a7-84b79681d4c2",
              "name": "flowdata.created_at",
              "value": "={{ $json.body.conversation.messages[0].created_at.toDateTime('s').toISO() }}",
              "type": "string"
            },
            {
              "id": "c2b0e878-3336-4815-8971-bcee6673b0de",
              "name": "flowdata.message_id",
              "value": "={{ $json.body.conversation.messages[0].id }}",
              "type": "number"
            },
            {
              "id": "ca83f9c5-edff-45aa-b924-4365b86aa076",
              "name": "flowdata.content",
              "value": "={{ $json.body.conversation.messages[0].content }}",
              "type": "string"
            },
            {
              "id": "c7ef341a-8cbf-4531-8cc3-3a2ea20aa161",
              "name": "flowdata.event",
              "value": "={{ $json.body.event }}",
              "type": "string"
            },
            {
              "id": "cc94dfe0-140b-4bbe-98fd-b66653c915d6",
              "name": "flowdata.file_type",
              "value": "={{ $json.body.conversation.messages[0].attachments[0].file_type}}",
              "type": "string"
            },
            {
              "id": "c9065bdc-aa73-4426-962a-f9daf2468871",
              "name": "flowdata.media_url",
              "value": "={{ $json.body.conversation.messages[0].attachments[0].data_url }}",
              "type": "string"
            },
            {
              "id": "8303ea5d-cc2b-4e12-9224-858afe4f8aec",
              "name": "flowdata.phone_number",
              "value": "={{ $json.body.sender.phone_number }}",
              "type": "string"
            },
            {
              "id": "b75bddb1-0a3c-408d-89b3-5586e5b33f64",
              "name": "evaluation",
              "value": "={{ $json.evaluation }}",
              "type": "boolean"
            },
            {
              "id": "36820426-b1ca-4503-8a02-daf4a9f4ccfd",
              "name": "chat",
              "value": "={{ $json.chat }}",
              "type": "boolean"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        448,
        192
      ],
      "id": "60156013-455c-4cab-833d-cc57fe06cd6d",
      "name": "Set data"
    },
    {
      "parameters": {
        "method": "POST",
        "url": "={{ $('Set data').item.json.flowdata.url }}/api/v1/accounts/{{ $('Set data').item.json.flowdata.account_id }}/conversations/{{ $('Set data').item.json.flowdata.conversation_id }}/messages/",
        "authentication": "genericCredentialType",
        "genericAuthType": "httpHeaderAuth",
        "sendBody": true,
        "bodyParameters": {
          "parameters": [
            {
              "name": "content",
              "value": "={{ $('refiner-agent').item.json.output }}"
            },
            {
              "name": "private",
              "value": "false"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.httpRequest",
      "typeVersion": 4.2,
      "position": [
        4544,
        384
      ],
      "id": "895ba00e-603f-4150-bdc6-ae3e1c147ddc",
      "name": "Send message",
      "credentials": {
        "httpHeaderAuth": {
          "id": "nWyAJQsTprwGKxtE",
          "name": "Chatwoot - Header Auth"
        }
      }
    },
    {
      "parameters": {
        "sessionIdType": "customKey",
        "sessionKey": "={{ $('Set data').item.json.flowdata.conversation_id }}",
        "tableName": "={{ $('Set data').item.json.flowdata.project_name }}_n8n_chat_histories",
        "contextWindowLength": 20
      },
      "type": "@n8n/n8n-nodes-langchain.memoryPostgresChat",
      "typeVersion": 1.3,
      "position": [
        3392,
        416
      ],
      "id": "def82634-9aad-4a2a-9def-6524689bb706",
      "name": "Postgres Chat Memory",
      "credentials": {
        "postgres": {
          "id": "xKI0Rsj9nPwMEm0Q",
          "name": "Postgres account"
        }
      }
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "8dbf19e8-e871-4c1d-9dc2-f1d4f4103841",
              "leftValue": "={{ $json.flowdata.admin }}",
              "rightValue": "",
              "operator": {
                "type": "boolean",
                "operation": "false",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.filter",
      "typeVersion": 2.2,
      "position": [
        672,
        192
      ],
      "id": "c6444f1c-b3f0-4158-aa3c-5f79ae973580",
      "name": "Filter admin",
      "disabled": true
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "2f9ad325-43d1-40f3-867b-a1f883cbf221",
              "leftValue": "={{ $json.flowdata.admin }}",
              "rightValue": "",
              "operator": {
                "type": "boolean",
                "operation": "true",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.filter",
      "typeVersion": 2.2,
      "position": [
        896,
        192
      ],
      "id": "ba42299f-b0eb-4831-93de-415c2bf4732e",
      "name": "Filter all except admin",
      "disabled": true
    },
    {
      "parameters": {
        "authentication": "serviceAccount",
        "documentId": {
          "__rl": true,
          "value": "1VgzRX4sB431iHLcJpV0ok03HDdIyKILuzsGAk84tCjo",
          "mode": "list",
          "cachedResultName": "Evaluations",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1VgzRX4sB431iHLcJpV0ok03HDdIyKILuzsGAk84tCjo/edit?usp=drivesdk"
        },
        "sheetName": {
          "__rl": true,
          "value": "gid=0",
          "mode": "list",
          "cachedResultName": "Sheet1",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1VgzRX4sB431iHLcJpV0ok03HDdIyKILuzsGAk84tCjo/edit#gid=0"
        }
      },
      "type": "n8n-nodes-base.evaluationTrigger",
      "typeVersion": 4.6,
      "position": [
        0,
        0
      ],
      "id": "950d6287-46f8-4e87-a082-c7250481f2e4",
      "name": "When fetching a dataset row",
      "credentials": {
        "googleApi": {
          "id": "UDitTNIuZ8oToriK",
          "name": "Google Sheets account"
        }
      }
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "8bb15ae9-aaa0-4b2f-bfb5-a277f4dae582",
              "name": "body.message_type",
              "value": "=incoming",
              "type": "string"
            },
            {
              "id": "e24befd1-922a-42fc-80b4-ad26331ed110",
              "name": "body.conversation.labels",
              "value": "=[]",
              "type": "array"
            },
            {
              "id": "cc94dfe0-140b-4bbe-98fd-b66653c915d6",
              "name": "body.attachments",
              "value": "=[]",
              "type": "array"
            },
            {
              "id": "43ab7f16-533b-4d5b-a6da-821b7050c8be",
              "name": "body.conversation.messages[0].attachments[0].file_type",
              "value": "=",
              "type": "string"
            },
            {
              "id": "1b2a551e-92e9-4ae5-a943-f496759199b4",
              "name": "body.account.id",
              "value": "=1",
              "type": "number"
            },
            {
              "id": "8c10811b-3923-4b22-b868-fec06fa856ed",
              "name": "body.conversation.messages[0].conversation_id",
              "value": "=1000000",
              "type": "number"
            },
            {
              "id": "6ef36fd7-bef2-4f0d-a5a7-84b79681d4c2",
              "name": "body.conversation.messages[0].created_at",
              "value": "={{ Math.floor(Date.now() / 1000) }}",
              "type": "string"
            },
            {
              "id": "c2b0e878-3336-4815-8971-bcee6673b0de",
              "name": "body.conversation.messages[0].id",
              "value": "={{ $json.row_number }}",
              "type": "number"
            },
            {
              "id": "ca83f9c5-edff-45aa-b924-4365b86aa076",
              "name": "body.conversation.messages[0].content",
              "value": "={{ $json.user_message }}",
              "type": "string"
            },
            {
              "id": "c9065bdc-aa73-4426-962a-f9daf2468871",
              "name": "body.conversation.messages[0].attachments[0].data_url",
              "value": "=",
              "type": "string"
            },
            {
              "id": "fa382860-2e45-4013-a83f-91fb70b9fab7",
              "name": "body.conversation.timestamp",
              "value": "={{ Math.floor(Date.now() / 1000) }}",
              "type": "string"
            },
            {
              "id": "28f689a1-7ffd-4913-9ea5-0c3d703980e7",
              "name": "evaluation",
              "value": true,
              "type": "boolean"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        224,
        0
      ],
      "id": "98af41fc-91da-48c0-9fd2-76dd47d05922",
      "name": "Set data for evaluations"
    },
    {
      "parameters": {
        "authentication": "serviceAccount",
        "documentId": {
          "__rl": true,
          "value": "1VgzRX4sB431iHLcJpV0ok03HDdIyKILuzsGAk84tCjo",
          "mode": "list",
          "cachedResultName": "Evaluations",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1VgzRX4sB431iHLcJpV0ok03HDdIyKILuzsGAk84tCjo/edit?usp=drivesdk"
        },
        "sheetName": {
          "__rl": true,
          "value": "gid=0",
          "mode": "list",
          "cachedResultName": "Sheet1",
          "cachedResultUrl": "https://docs.google.com/spreadsheets/d/1VgzRX4sB431iHLcJpV0ok03HDdIyKILuzsGAk84tCjo/edit#gid=0"
        },
        "outputs": {
          "values": [
            {
              "outputName": "actual_output",
              "outputValue": "={{ $json.output }}"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.evaluation",
      "typeVersion": 4.6,
      "position": [
        4544,
        0
      ],
      "id": "a64c9876-07c5-4dd8-b516-89b08583aa8f",
      "name": "Evaluation1",
      "credentials": {
        "googleApi": {
          "id": "UDitTNIuZ8oToriK",
          "name": "Google Sheets account"
        }
      }
    },
    {
      "parameters": {
        "workflowId": {
          "__rl": true,
          "value": "AWG4w99lv1o0Ni6m",
          "mode": "list",
          "cachedResultName": "firewall - v1.3"
        },
        "workflowInputs": {
          "mappingMode": "defineBelow",
          "value": {
            "incoming": "={{ $('Set data').item.json.flowdata.incoming }}",
            "human": "={{ $('Set data').item.json.flowdata.human }}",
            "human_pause": "={{ $('Set data').item.json.flowdata['human-pause'] }}",
            "account_id": "={{ $('Set data').item.json.flowdata.account_id }}",
            "conversation_id": "={{ $('Set data').item.json.flowdata.conversation_id }}",
            "message_id": "={{ $('Set data').item.json.flowdata.message_id }}",
            "project_name": "={{ $('Set data').item.json.flowdata.project_name }}",
            "chatwoot_url": "={{ $('Set data').item.json.flowdata.url }}",
            "message_content": "={{ $('Set data').item.json.flowdata.content }}",
            "created_at": "={{ $('Set data').item.json.flowdata.created_at }}",
            "human_pause_duration_in_minuts": 1,
            "event_type": "={{ $('Set data').item.json.flowdata.event }}"
          },
          "matchingColumns": [],
          "schema": [
            {
              "id": "project_name",
              "displayName": "project_name",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string"
            },
            {
              "id": "chatwoot_url",
              "displayName": "chatwoot_url",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string"
            },
            {
              "id": "account_id",
              "displayName": "account_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "number"
            },
            {
              "id": "conversation_id",
              "displayName": "conversation_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "number"
            },
            {
              "id": "message_id",
              "displayName": "message_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "number"
            },
            {
              "id": "message_content",
              "displayName": "message_content",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string"
            },
            {
              "id": "incoming",
              "displayName": "incoming",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "boolean"
            },
            {
              "id": "human",
              "displayName": "human",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "boolean"
            },
            {
              "id": "human_pause",
              "displayName": "human_pause",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "boolean"
            },
            {
              "id": "human_pause_duration_in_minuts",
              "displayName": "human_pause_duration_in_minuts",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "number"
            },
            {
              "id": "created_at",
              "displayName": "created_at",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string"
            },
            {
              "id": "event_type",
              "displayName": "event_type",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string",
              "removed": false
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": true
        },
        "options": {
          "waitForSubWorkflow": true
        }
      },
      "type": "n8n-nodes-base.executeWorkflow",
      "typeVersion": 1.2,
      "position": [
        1120,
        192
      ],
      "id": "529903ba-6136-406d-b3fd-07fd95d695fe",
      "name": "firewall",
      "disabled": true
    },
    {
      "parameters": {
        "workflowId": {
          "__rl": true,
          "value": "5xhl7fXA6zZ2giCY",
          "mode": "list",
          "cachedResultName": "message-buffer - v1.1"
        },
        "workflowInputs": {
          "mappingMode": "defineBelow",
          "value": {
            "message_id": "={{ $('Set data').item.json.flowdata.message_id }}",
            "session_id": "={{ $('Set data').item.json.flowdata.project_name }}_{{ $('Set data').item.json.flowdata.account_id }}_{{ $('Set data').item.json.flowdata.conversation_id }}_buffer",
            "session_input": "={{ $json.text }}",
            "session_timestamp": "={{ $('Set data').item.json.flowdata.created_at.toDateTime() }}",
            "time_to_wait_in_seconds": 5
          },
          "matchingColumns": [],
          "schema": [
            {
              "id": "message_id",
              "displayName": "message_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "number"
            },
            {
              "id": "session_id",
              "displayName": "session_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string"
            },
            {
              "id": "session_input",
              "displayName": "session_input",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string"
            },
            {
              "id": "session_timestamp",
              "displayName": "session_timestamp",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string"
            },
            {
              "id": "time_to_wait_in_seconds",
              "displayName": "time_to_wait_in_seconds",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "number",
              "removed": false
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": true
        },
        "options": {
          "waitForSubWorkflow": true
        }
      },
      "type": "n8n-nodes-base.executeWorkflow",
      "typeVersion": 1.2,
      "position": [
        1568,
        192
      ],
      "id": "d2eece00-352d-4409-898e-bb43dfe7368a",
      "name": "message-buffer"
    },
    {
      "parameters": {
        "model": {
          "__rl": true,
          "mode": "list",
          "value": "gpt-4.1-mini"
        },
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1.2,
      "position": [
        3264,
        416
      ],
      "id": "4ae0eca4-ea5a-4ff3-a1e6-df89ccabf83d",
      "name": "OpenAI Chat Model2",
      "credentials": {
        "openAiApi": {
          "id": "leOLHYOtXey0DgzA",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "model": {
          "__rl": true,
          "value": "gpt-4o-mini",
          "mode": "list",
          "cachedResultName": "gpt-4o-mini"
        },
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1.2,
      "position": [
        4016,
        416
      ],
      "id": "1674957a-ae53-4ab5-9443-64e125d1a890",
      "name": "OpenAI Chat Model1",
      "credentials": {
        "openAiApi": {
          "id": "leOLHYOtXey0DgzA",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.chatTrigger",
      "typeVersion": 1.1,
      "position": [
        0,
        192
      ],
      "id": "f166d7b7-72c7-4c93-8579-d502d7a02873",
      "name": "When chat message received",
      "webhookId": "3905568c-ff4d-47e3-82b5-acabb8d5f920"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "8bb15ae9-aaa0-4b2f-bfb5-a277f4dae582",
              "name": "body.message_type",
              "value": "=incoming",
              "type": "string"
            },
            {
              "id": "e24befd1-922a-42fc-80b4-ad26331ed110",
              "name": "body.conversation.labels",
              "value": "=[]",
              "type": "array"
            },
            {
              "id": "cc94dfe0-140b-4bbe-98fd-b66653c915d6",
              "name": "body.attachments",
              "value": "=[]",
              "type": "array"
            },
            {
              "id": "43ab7f16-533b-4d5b-a6da-821b7050c8be",
              "name": "body.conversation.messages[0].attachments[0].file_type",
              "value": "=",
              "type": "string"
            },
            {
              "id": "1b2a551e-92e9-4ae5-a943-f496759199b4",
              "name": "body.account.id",
              "value": "=1",
              "type": "number"
            },
            {
              "id": "8c10811b-3923-4b22-b868-fec06fa856ed",
              "name": "body.conversation.messages[0].conversation_id",
              "value": "=2000000",
              "type": "number"
            },
            {
              "id": "6ef36fd7-bef2-4f0d-a5a7-84b79681d4c2",
              "name": "body.conversation.messages[0].created_at",
              "value": "={{ Math.floor(Date.now() / 1000) }}",
              "type": "string"
            },
            {
              "id": "c2b0e878-3336-4815-8971-bcee6673b0de",
              "name": "body.conversation.messages[0].id",
              "value": "=999",
              "type": "number"
            },
            {
              "id": "ca83f9c5-edff-45aa-b924-4365b86aa076",
              "name": "body.conversation.messages[0].content",
              "value": "={{ $json.chatInput }}",
              "type": "string"
            },
            {
              "id": "c9065bdc-aa73-4426-962a-f9daf2468871",
              "name": "body.conversation.messages[0].attachments[0].data_url",
              "value": "=",
              "type": "string"
            },
            {
              "id": "fa382860-2e45-4013-a83f-91fb70b9fab7",
              "name": "body.conversation.timestamp",
              "value": "={{ Math.floor(Date.now() / 1000) }}",
              "type": "string"
            },
            {
              "id": "28f689a1-7ffd-4913-9ea5-0c3d703980e7",
              "name": "evaluation",
              "value": false,
              "type": "boolean"
            },
            {
              "id": "dbada595-b0cf-421c-8fbc-e52c4b356377",
              "name": "chat",
              "value": true,
              "type": "boolean"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        224,
        192
      ],
      "id": "e2c7410c-33fd-4324-af80-3c3816f580c7",
      "name": "Set data for chat"
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "leftValue": "={{ $('Set data').item.json.evaluation }}",
                    "rightValue": "",
                    "operator": {
                      "type": "boolean",
                      "operation": "true",
                      "singleValue": true
                    },
                    "id": "756783ce-30db-4cf9-b983-02fe716523b2"
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "evaluation"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "12f5e1c9-db0e-4943-9e44-01f89e94f38a",
                    "leftValue": "={{ $('Set data').item.json.chat }}",
                    "rightValue": "chat",
                    "operator": {
                      "type": "boolean",
                      "operation": "true",
                      "singleValue": true
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "chat"
            }
          ]
        },
        "options": {
          "fallbackOutput": "extra",
          "renameFallbackOutput": "chatwoot"
        }
      },
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3.2,
      "position": [
        4320,
        176
      ],
      "id": "ec65b5ef-2bd0-45c3-ae3d-8228ad535d6c",
      "name": "Switch"
    },
    {
      "parameters": {},
      "type": "n8n-nodes-base.noOp",
      "typeVersion": 1,
      "position": [
        4544,
        192
      ],
      "id": "f7e259fe-1646-45c0-bd58-ac8776444396",
      "name": "Chat"
    },
    {
      "parameters": {
        "workflowId": {
          "__rl": true,
          "value": "VCUyNC1JY5SRuMOc",
          "mode": "list",
          "cachedResultName": "transcribe-media - v1.1"
        },
        "workflowInputs": {
          "mappingMode": "defineBelow",
          "value": {
            "text": "={{ $('Set data').item.json.flowdata.content }}",
            "media_url": "={{ $('Set data').item.json.flowdata.media_url }}",
            "media_type": "={{ $('Set data').item.json.flowdata.file_type }}"
          },
          "matchingColumns": [],
          "schema": [
            {
              "id": "text",
              "displayName": "text",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string"
            },
            {
              "id": "media_type",
              "displayName": "media_type",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string",
              "removed": false
            },
            {
              "id": "media_url",
              "displayName": "media_url",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string"
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": true
        },
        "options": {
          "waitForSubWorkflow": true
        }
      },
      "type": "n8n-nodes-base.executeWorkflow",
      "typeVersion": 1.2,
      "position": [
        1344,
        192
      ],
      "id": "85f77635-2579-49e0-92ad-287621c32fdf",
      "name": "transcribe-media"
    },
    {
      "parameters": {
        "workflowId": {
          "__rl": true,
          "value": "F1Eb1hg8VcjpLsjE",
          "mode": "list",
          "cachedResultName": "intention-analizer - v1"
        },
        "workflowInputs": {
          "mappingMode": "defineBelow",
          "value": {
            "user_message": "={{ $('message-buffer').item.json.output }}",
            "conversation_id": "={{ $('Set data').item.json.flowdata.conversation_id }}",
            "client_name": "={{ $('Set data').item.json.flowdata.project_name }}",
            "system_messsage": "=## ROL:\n\nAct\u00faa como un analista de conversaciones para un asistente virtual. Se te proporcionar\u00e1 el historial del chat completo con el usuario y su \u00faltimo mensaje. Tu \u00fanica tarea es analizar ese contenido y determinar qu\u00e9 tipo de acci\u00f3n se necesita para responder al usuario, y explicar por qu\u00e9 llegaste a esa conclusi\u00f3n.\n\nLas posibles opciones de respuesta son las siguientes:\n\n- `\"informacion-de-la-empresa\"` \u2192 Cuando el usuario solicita datos como ubicaci\u00f3n de la empresa, los horarios de atenci\u00f3n, los medios o pol\u00edticas de pago, el alias para transferencias, los m\u00e9todos o pol\u00edticas de env\u00edo, pol\u00edticas de cambios y devoluciones, redes sociales o el sitio web, o cualquier otra informaci\u00f3n propia de la empresa.\n- `\"asesoramiento\"` \u2192 Cuando el usuario necesita ayuda para tomar una decisi\u00f3n, si necesita precios de tinturas en general, carta/cartilla de colores o saber los tonos dispomibles, pregunta por tinturas sin amon\u00edaco, c\u00f3mo cubrir canas, hacer reflejos, tonalizar, entender qu\u00e9 es mejor para su caso, etc.\n- `\"buscador-de-productos\"` \u2192 Cuando el usuario est\u00e1 buscando un producto espec\u00edfico, disponibilidad, precio, o detalles de productos.\n- `\"cierre-de-venta\"` \u2192 Cuando en la \u00faltima interacci\u00f3n el bot le pas\u00f3 un pedido a confirmar y ahora el \u00faltimo mensaje del usuario confirma.\n- `\"general\"` \u2192 Ninguna de las anteriores.\n\n---\n\nDevuelve la respuesta en formato JSON como una lista de objetos, cada uno con las claves \"require\" y \"why\".\n\nDevuelve m\u00e1s de un objeto si la pregunta del usuario lo requiere. Es v\u00e1lido devolver uno, dos o m\u00e1s de dos objetos dependiendo del contenido del mensaje.\n\n---\n\n### Formato de salida:\n\n```json\n[\n  {\n    \"require\": \"informacion-de-la-empresa\",\n    \"why\": \"porque el usuario pregunt\u00f3 el horario de atenci\u00f3n\"\n  },\n  {\n    \"require\": \"buscador-de-productos\",\n    \"why\": \"porque el usuario pregunt\u00f3 por disponibilidad del producto X\"\n  }\n]\n```\n",
            "chat_history": "={{ $('get-memory').item.json.chat_history }}"
          },
          "matchingColumns": [
            "output_firstItem",
            "flowdata_conversation_id_toString"
          ],
          "schema": [
            {
              "id": "client_name",
              "displayName": "client_name",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string",
              "removed": false
            },
            {
              "id": "user_message",
              "displayName": "user_message",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string",
              "removed": false
            },
            {
              "id": "conversation_id",
              "displayName": "conversation_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "number",
              "removed": false
            },
            {
              "id": "chat_history",
              "displayName": "chat_history",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string",
              "removed": false
            },
            {
              "id": "system_messsage",
              "displayName": "system_messsage",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string",
              "removed": false
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": true
        },
        "options": {
          "waitForSubWorkflow": true
        }
      },
      "type": "n8n-nodes-base.executeWorkflow",
      "typeVersion": 1.2,
      "position": [
        2688,
        192
      ],
      "name": "intention-analizer",
      "id": "43ffa546-9a9d-4293-ab87-a1a6a445dbe3",
      "disabled": true
    },
    {
      "parameters": {
        "workflowId": {
          "__rl": true,
          "value": "NGMARSo1UAmMG1FM",
          "mode": "list",
          "cachedResultName": "get-memory - v1"
        },
        "workflowInputs": {
          "mappingMode": "defineBelow",
          "value": {
            "conversation_id": "={{ $('Set data').item.json.flowdata.conversation_id }}",
            "client_name": "={{ $('Set data').item.json.flowdata.project_name }}"
          },
          "matchingColumns": [],
          "schema": [
            {
              "id": "client_name",
              "displayName": "client_name",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string"
            },
            {
              "id": "conversation_id",
              "displayName": "conversation_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "number"
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": true
        },
        "options": {}
      },
      "type": "n8n-nodes-base.executeWorkflow",
      "typeVersion": 1.2,
      "position": [
        1792,
        192
      ],
      "id": "035c1573-7325-4393-8c14-a65ad6726084",
      "name": "get-memory"
    },
    {
      "parameters": {
        "workflowId": {
          "__rl": true,
          "value": "WNyHyrBoIJ73Jxyl",
          "mode": "list",
          "cachedResultName": "language-detector - v1"
        },
        "workflowInputs": {
          "mappingMode": "defineBelow",
          "value": {
            "user_message": "={{ $('message-buffer').item.json.output }}",
            "default_language": "Espa\u00f1ol"
          },
          "matchingColumns": [],
          "schema": [
            {
              "id": "user_message",
              "displayName": "user_message",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string"
            },
            {
              "id": "default_language",
              "displayName": "default_language",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string"
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": true
        },
        "options": {
          "waitForSubWorkflow": true
        }
      },
      "type": "n8n-nodes-base.executeWorkflow",
      "typeVersion": 1.2,
      "position": [
        2240,
        192
      ],
      "id": "0deb1ac7-62fd-475e-944f-be6ef75a1cf5",
      "name": "language-detector",
      "disabled": true
    },
    {
      "parameters": {
        "workflowId": {
          "__rl": true,
          "value": "OdGlhJN4N2yn72zW",
          "mode": "list",
          "cachedResultName": "build-system-message - v3"
        },
        "workflowInputs": {
          "mappingMode": "defineBelow",
          "value": {
            "conversation_id": "={{ $('Set data').item.json.flowdata.conversation_id }}",
            "business_name": "={{ $('Set data').item.json.flowdata.project_name }}",
            "language": "Espa\u00f1ol",
            "repo_name": "={{ $('Set data').item.json.flowdata.repo }}"
          },
          "matchingColumns": [
            "language"
          ],
          "schema": [
            {
              "id": "business_name",
              "displayName": "business_name",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string",
              "removed": false
            },
            {
              "id": "repo_name",
              "displayName": "repo_name",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string",
              "removed": false
            },
            {
              "id": "language",
              "displayName": "language",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string",
              "removed": false
            },
            {
              "id": "conversation_id",
              "displayName": "conversation_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "number",
              "removed": false
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": true
        },
        "options": {
          "waitForSubWorkflow": true
        }
      },
      "type": "n8n-nodes-base.executeWorkflow",
      "typeVersion": 1.2,
      "position": [
        2912,
        192
      ],
      "id": "33ece62e-c753-4328-813d-dd6dae2461c0",
      "name": "build-system-message"
    },
    {
      "parameters": {
        "workflowId": {
          "__rl": true,
          "value": "68zYbBj2adQEPzff",
          "mode": "list",
          "cachedResultName": "bot-detector - v1"
        },
        "workflowInputs": {
          "mappingMode": "defineBelow",
          "value": {
            "userMessage": "={{ $('Set data').item.json.flowdata.content }}",
            "customInstructionsToDefineItsNotBot": "si el mensaje dice campa\u00f1a",
            "chatHistory": "={{ $json.chat_history }}"
          },
          "matchingColumns": [
            "output_firstItem",
            "flowdata_conversation_id_toString"
          ],
          "schema": [
            {
              "id": "userMessage",
              "displayName": "userMessage",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string",
              "removed": false
            },
            {
              "id": "chatHistory",
              "displayName": "chatHistory",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string",
              "removed": false
            },
            {
              "id": "customInstructionsToDefineItsNotBot",
              "displayName": "customInstructionsToDefineItsNotBot",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string",
              "removed": false
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": true
        },
        "options": {
          "waitForSubWorkflow": true
        }
      },
      "type": "n8n-nodes-base.executeWorkflow",
      "typeVersion": 1.2,
      "position": [
        2016,
        192
      ],
      "name": "bot-detector",
      "id": "131c795e-5b39-43f7-8204-34e3b1273787"
    },
    {
      "parameters": {
        "toolDescription": "=Usa la herramienta `company-advisor-agent` cuando para responder la consulta del cliente necesitas la siguiente informaci\u00f3n: Medios de contacto, redes sociales, ubicaci\u00f3n, horarios de atenci\u00f3n, medios de pago, alias para transferencia, descuentos o pol\u00edticas de reserva, c\u00f3mo se realizan los env\u00edos, sus costos o tiempos de entrega, los cambios, devoluciones o garant\u00edas.\n\nUsa la herramienta `company-advisor-agent` generando el valor del input \"Prompt_user_message\" con toda la informaci\u00f3n necesaria para obtener una buena respuesta.\n\nEjemplos:\n\n- Si el cliente pidi\u00f3 la direcci\u00f3n usa esta herramienta con la \"query\": `Necesito la direcci\u00f3n del local`.\n\n- Si el cliente quiere saber si el local est\u00e1 abierto usa esta herramienta con la \"query\": `Necesito los horarios del local`.\n\n- Si el cliente quiere saber el alias usa esta herramienta con la \"query\": `Necesito el alias para realizar transferencias`.\n\n- Si el cliente quiere saber cuanto demora un env\u00edo usa esta herramienta con la \"query\": `Necesito los tiempos de env\u00edo`.\n\n- Si el cliente solicita medios de contacto o redes sociales usa esta herramienta con la \"query\": `Necesito los medios de contacto o las redes sociales`.\n\nUsa la herramienta `company-manager` generando el valor del input \"Prompt_user_message\" con toda la informaci\u00f3n necesaria para obtener una buena respuesta.\n\nEjemplos:\n\n- Si el cliente pidi\u00f3 la direcci\u00f3n usa esta herramienta con la \"query\": `Necesito la direcci\u00f3n del local`.\n\n- Si el cliente quiere saber si el local est\u00e1 abierto usa esta herramienta con la \"query\": `Necesito los horarios del local`.\n\n- Si el cliente quiere saber el alias usa esta herramienta con la \"query\": `Necesito el alias para realizar transferencias`.\n\n- Si el cliente quiere saber cuanto demora un env\u00edo usa esta herramienta con la \"query\": `Necesito los tiempos de env\u00edo`.\n\n- Si el cliente solicita medios de contacto o redes sociales usa esta herramienta con la \"query\": `Necesito los medios de contacto o las redes sociales`.\n",
        "text": "={{ /*n8n-auto-generated-fromAI-override*/ $fromAI('Prompt__User_Message_', ``, 'string') }}",
        "options": {
          "systemMessage": "={{ $('build-system-message').item.json['company-advisor-agent'] }}"
        }
      },
      "type": "@n8n/n8n-nodes-langchain.agentTool",
      "typeVersion": 2.2,
      "position": [
        3520,
        416
      ],
      "id": "3bf67784-035b-4635-a2c1-6d09d97d7fa4",
      "name": "company-advisor-agent"
    },
    {
      "parameters": {
        "model": {
          "__rl": true,
          "value": "gpt-4o-mini",
          "mode": "list",
          "cachedResultName": "gpt-4o-mini"
        },
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1.2,
      "position": [
        3616,
        624
      ],
      "id": "eda75558-bdd5-4533-92bb-84948430cc36",
      "name": "OpenAI Chat Model3",
      "credentials": {
        "openAiApi": {
          "id": "leOLHYOtXey0DgzA",
          "name": "OpenAi account"
        }
      }
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "={{ $('message-buffer').item.json.output }}",
        "options": {
          "systemMessage": "={{ $('build-system-message').item.json['refiner-agent'] }}\n\n---\n\nLa \"respuesta-de-la-ia\" fue la siguiente: \"{{ $json.output }}\""
        }
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 2.1,
      "position": [
        3920,
        192
      ],
      "id": "211df540-26c5-4cc6-8748-09cfa7b4dd07",
      "name": "refiner-agent"
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "={{ $('message-buffer').first().json.output }}",
        "needsFallback": true,
        "options": {
          "systemMessage": "={{ $json['main-agent'] }}"
        }
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 2.1,
      "position": [
        3232,
        192
      ],
      "id": "078d9141-a6f9-4ed7-ba12-a751484ceb5b",
      "name": "main-agent"
    },
    {
      "parameters": {
        "workflowId": {
          "__rl": true,
          "value": "8MHj8V4mBnqgU6K0",
          "mode": "list",
          "cachedResultName": "lead-reactivation"
        },
        "workflowInputs": {
          "mappingMode": "defineBelow",
          "value": {
            "client_name": "={{ $('Set data').item.json.flowdata.project_name }}",
            "user_message": "={{ $('Set data').item.json.flowdata.content }}",
            "session_id": "={{ $('Set data').item.json.flowdata.conversation_id }}",
            "account_id": "={{ $('Set data').item.json.flowdata.account_id }}",
            "url": "={{ $('Set data').item.json.flowdata.url }}",
            "time_to_reactivate_in_hours": 24,
            "campaing_text_to_recognize": "campa\u00f1a",
            "text_to_reactive": "Texto para reactivar"
          },
          "matchingColumns": [],
          "schema": [
            {
              "id": "url",
              "displayName": "url",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string",
              "removed": false
            },
            {
              "id": "client_name",
              "displayName": "client_name",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string"
            },
            {
              "id": "account_id",
              "displayName": "account_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "number",
              "removed": false
            },
            {
              "id": "session_id",
              "displayName": "session_id",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "number",
              "removed": false
            },
            {
              "id": "user_message",
              "displayName": "user_message",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string"
            },
            {
              "id": "campaing_text_to_recognize",
              "displayName": "campaing_text_to_recognize",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string",
              "removed": false
            },
            {
              "id": "time_to_reactivate_in_hours",
              "displayName": "time_to_reactivate_in_hours",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "number",
              "removed": false
            },
            {
              "id": "text_to_reactive",
              "displayName": "text_to_reactive",
              "required": false,
              "defaultMatch": false,
              "display": true,
              "canBeUsedToMatch": true,
              "type": "string",
              "removed": false
            }
          ],
          "attemptToConvertTypes": false,
          "convertFieldsToString": true
        },
        "options": {
          "waitForSubWorkflow": false
        }
      },
      "type": "n8n-nodes-base.executeWorkflow",
      "typeVersion": 1.2,
      "position": [
        2464,
        192
      ],
      "id": "77bed07d-289a-4cb2-8521-fae8aecb16da",
      "name": "lead-reactivation",
      "disabled": true
    },
    {
      "parameters": {
        "operation": "push",
        "list": "={{ $('Set data').item.json.flowdata.project_name}}_{{ $('Set data').item.json.flowdata.account_id}}_{{ $('Set data').item.json.flowdata.conversation_id }}",
        "messageData": "={{ $json.content }}",
        "tail": true
      },
      "type": "n8n-nodes-base.redis",
      "typeVersion": 1,
      "position": [
        4768,
        384
      ],
      "id": "40a36f9b-7963-4977-ae5f-32e0f03fd5fb",
      "name": "Save last message",
      "credentials": {
        "redis": {
          "id": "zlVWqKFSgUSVauIh",
          "name": "Redis account"
        }
      }
    }
  ],
  "connections": {
    "OpenAI Chat Model": {
      "ai_languageModel": [
        [
          {
            "node": "main-agent",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "Chatwoot": {
      "main": [
        [
          {
            "node": "Set data",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Set data": {
      "main": [
        [
          {
            "node": "Filter admin",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Send message": {
      "main": [
        [
          {
            "node": "Save last message",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Postgres Chat Memory": {
      "ai_memory": [
        [
          {
            "node": "main-agent",
            "type": "ai_memory",
            "index": 0
          }
        ]
      ]
    },
    "Filter admin": {
      "main": [
        [
          {
            "node": "Filter all except admin",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Filter all except admin": {
      "main": [
        [
          {
            "node": "firewall",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "When fetching a dataset row": {
      "main": [
        [
          {
            "node": "Set data for evaluations",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Set data for evaluations": {
      "main": [
        [
          {
            "node": "Set data",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "firewall": {
      "main": [
        [
          {
            "node": "transcribe-media",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "message-buffer": {
      "main": [
        [
          {
            "node": "get-memory",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI Chat Model2": {
      "ai_languageModel": [
        [
          {
            "node": "main-agent",
            "type": "ai_languageModel",
            "index": 1
          }
        ]
      ]
    },
    "OpenAI Chat Model1": {
      "ai_languageModel": [
        [
          {
            "node": "refiner-agent",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "When chat message received": {
      "main": [
        [
          {
            "node": "Set data for chat",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Set data for chat": {
      "main": [
        [
          {
            "node": "Set data",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Switch": {
      "main": [
        [
          {
            "node": "Evaluation1",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Chat",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Send message",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "transcribe-media": {
      "main": [
        [
          {
            "node": "message-buffer",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "get-memory": {
      "main": [
        [
          {
            "node": "bot-detector",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "language-detector": {
      "main": [
        [
          {
            "node": "lead-reactivation",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "bot-detector": {
      "main": [
        [
          {
            "node": "language-detector",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "intention-analizer": {
      "main": [
        [
          {
            "node": "build-system-message",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "build-system-message": {
      "main": [
        [
          {
            "node": "main-agent",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI Chat Model3": {
      "ai_languageModel": [
        [
          {
            "node": "company-advisor-agent",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    },
    "company-advisor-agent": {
      "ai_tool": [
        [
          {
            "node": "main-agent",
            "type": "ai_tool",
            "index": 0
          }
        ]
      ]
    },
    "refiner-agent": {
      "main": [
        [
          {
            "node": "Switch",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "main-agent": {
      "main": [
        [
          {
            "node": "refiner-agent",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "lead-reactivation": {
      "main": [
        [
          {
            "node": "intention-analizer",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "settings": {
    "executionOrder": "v1"
  }
}