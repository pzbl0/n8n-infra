{
  "name": "calendar-operations - v1",
  "nodes": [
    {
      "parameters": {
        "workflowInputs": {
          "values": [
            {
              "name": "calendar_id"
            },
            {
              "name": "operation_type"
            },
            {
              "name": "supabase_table_name"
            },
            {
              "name": "event_id"
            },
            {
              "name": "client_id",
              "type": "number"
            },
            {
              "name": "client_phone"
            },
            {
              "name": "client_name"
            },
            {
              "name": "event_start"
            },
            {
              "name": "event_end"
            },
            {
              "name": "service"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.executeWorkflowTrigger",
      "typeVersion": 1.1,
      "position": [
        -260,
        -220
      ],
      "id": "23e1c78b-d959-4384-995a-aa553ccbe93d",
      "name": "When Executed by Another Workflow"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "4a900070-1360-4115-a464-965af9ff6800",
              "leftValue": "={{ $json.available }}",
              "rightValue": "",
              "operator": {
                "type": "boolean",
                "operation": "true",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        620,
        -820
      ],
      "id": "61511591-40c7-4f36-b2f0-3ab56e162117",
      "name": "If"
    },
    {
      "parameters": {
        "rules": {
          "values": [
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "leftValue": "={{ $json.operation_type }}",
                    "rightValue": "create_event",
                    "operator": {
                      "type": "string",
                      "operation": "equals"
                    },
                    "id": "fc3baad0-0f98-4b30-8965-8244d4af86d1"
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "Create"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "420e3872-61f6-44ed-9b37-94003b3fb728",
                    "leftValue": "={{ $json.operation_type }}",
                    "rightValue": "delete_event",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "Delete"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "a5250dde-07d4-42be-83aa-c6fdb5dc99e4",
                    "leftValue": "={{ $json.operation_type }}",
                    "rightValue": "get_events",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "Get events"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "0709d35f-6ef4-40c6-aa6d-973832e2f441",
                    "leftValue": "={{ $json.operation_type }}",
                    "rightValue": "get_availability",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "Get availability"
            },
            {
              "conditions": {
                "options": {
                  "caseSensitive": true,
                  "leftValue": "",
                  "typeValidation": "strict",
                  "version": 2
                },
                "conditions": [
                  {
                    "id": "39b79c65-484e-4fcd-b538-f3869bd55884",
                    "leftValue": "={{ $json.operation_type }}",
                    "rightValue": "update_event",
                    "operator": {
                      "type": "string",
                      "operation": "equals",
                      "name": "filter.operator.equals"
                    }
                  }
                ],
                "combinator": "and"
              },
              "renameOutput": true,
              "outputKey": "Update event"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.switch",
      "typeVersion": 3.2,
      "position": [
        180,
        -260
      ],
      "id": "38b008c0-e0d1-459c-9515-068fc859987f",
      "name": "Switch"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "b2a4b9e5-5bc7-46c4-b4b4-704d8b40e0d2",
              "name": "calendar_id",
              "value": "={{ $json.calendar_id }}",
              "type": "string"
            },
            {
              "id": "7f85d574-8b08-41f9-a6f6-5b61a54d530b",
              "name": "operation_type",
              "value": "={{ $json.operation_type }}",
              "type": "string"
            },
            {
              "id": "c7977165-2df0-4750-b0ab-3c4dbe7f696b",
              "name": "supabase_table_name",
              "value": "={{ $json.supabase_table_name }}",
              "type": "string"
            },
            {
              "id": "efaf4e1b-3e88-4664-bcaa-9c00176b9297",
              "name": "event_id",
              "value": "={{ $json.event_id }}",
              "type": "string"
            },
            {
              "id": "83ede5e1-5649-4fd8-a187-1bb51dbba476",
              "name": "client_id",
              "value": "={{ $json.client_id }}",
              "type": "number"
            },
            {
              "id": "da1e4dc3-c00b-4031-a12b-00b978143e0b",
              "name": "client_phone",
              "value": "={{ $json.client_phone }}",
              "type": "number"
            },
            {
              "id": "9f8209da-e4c5-4af8-8ea5-3c244b3fdb68",
              "name": "client_name",
              "value": "={{ $json.client_name }}",
              "type": "string"
            },
            {
              "id": "c0eb37b4-26f3-4006-a66c-9b6ce6968fb2",
              "name": "event_start",
              "value": "={{ $json.event_start }}",
              "type": "string"
            },
            {
              "id": "05bf1ee5-cfb3-4cd4-a894-9e71c1505380",
              "name": "event_end",
              "value": "={{ $json.event_end }}",
              "type": "string"
            },
            {
              "id": "b4963272-dfe7-42c2-9237-dde54231df4c",
              "name": "service",
              "value": "={{ $json.service }}",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        -40,
        -220
      ],
      "id": "91713e74-f6b8-4a6c-9e79-3a6e7bf0e005",
      "name": "Set data"
    },
    {
      "parameters": {
        "resource": "calendar",
        "calendar": {
          "__rl": true,
          "value": "={{ $('Set data').item.json.calendar_id }}",
          "mode": "id"
        },
        "timeMin": "={{ $('Set data').item.json.event_start }}",
        "timeMax": "={{ $('Set data').item.json.event_end }}",
        "options": {}
      },
      "type": "n8n-nodes-base.googleCalendar",
      "typeVersion": 1.3,
      "position": [
        400,
        -820
      ],
      "id": "8082f04b-aae7-4ac0-a84b-cf15978fd198",
      "name": "Check availability",
      "credentials": {
        "googleCalendarOAuth2Api": {
          "id": "8W0dPmjbm8PtxV20",
          "name": "Google Calendar account"
        }
      }
    },
    {
      "parameters": {
        "calendar": {
          "__rl": true,
          "value": "={{ $('Set data').item.json.calendar_id }}",
          "mode": "id"
        },
        "start": "={{ $('Set data').item.json.event_start }}",
        "end": "={{ $('Set data').item.json.event_end }}",
        "useDefaultReminders": false,
        "additionalFields": {
          "description": "=Nombre: {{ $('Set data').item.json.client_name }}\nTel\u00e9fono: {{ $('Set data').item.json.client_phone }}\nID: {{ $('Set data').item.json.client_id }}",
          "summary": "={{ $('Set data').item.json.client_name }} - {{ $('Set data').item.json.service }}"
        }
      },
      "type": "n8n-nodes-base.googleCalendar",
      "typeVersion": 1.3,
      "position": [
        840,
        -920
      ],
      "id": "755c34c1-eb2e-4527-8fee-0efbefda14e6",
      "name": "Create event",
      "credentials": {
        "googleCalendarOAuth2Api": {
          "id": "8W0dPmjbm8PtxV20",
          "name": "Google Calendar account"
        }
      }
    },
    {
      "parameters": {
        "tableId": "={{ $('Set data').item.json.supabase_table_name }}",
        "fieldsUi": {
          "fieldValues": [
            {
              "fieldId": "client_id",
              "fieldValue": "={{ $('Set data').item.json.client_id }}"
            },
            {
              "fieldId": "event_id",
              "fieldValue": "={{ $json.id }}"
            },
            {
              "fieldId": "calendar_id",
              "fieldValue": "={{ $json.organizer.email }}"
            },
            {
              "fieldId": "event_at",
              "fieldValue": "={{ $json.end.dateTime }}"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.supabase",
      "typeVersion": 1,
      "position": [
        1060,
        -920
      ],
      "id": "3e3c664f-be66-46cd-81c5-e9034736a18a",
      "name": "Add event to db",
      "credentials": {
        "supabaseApi": {
          "id": "PMEiM2p42E60tuGQ",
          "name": "Supabase account"
        }
      }
    },
    {
      "parameters": {
        "operation": "delete",
        "calendar": {
          "__rl": true,
          "value": "={{ $('Set data').item.json.calendar_id }}",
          "mode": "id"
        },
        "eventId": "={{ $('Set data').item.json.event_id }}",
        "options": {}
      },
      "type": "n8n-nodes-base.googleCalendar",
      "typeVersion": 1.3,
      "position": [
        400,
        -520
      ],
      "id": "2a7fd657-6772-4073-872f-9bc240538e06",
      "name": "Delete event",
      "credentials": {
        "googleCalendarOAuth2Api": {
          "id": "8W0dPmjbm8PtxV20",
          "name": "Google Calendar account"
        }
      }
    },
    {
      "parameters": {
        "operation": "delete",
        "tableId": "={{ $('Set data').item.json.supabase_table_name }}",
        "filters": {
          "conditions": [
            {
              "keyName": "event_id",
              "condition": "eq",
              "keyValue": "={{ $('Set data').item.json.event_id }}"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.supabase",
      "typeVersion": 1,
      "position": [
        620,
        -520
      ],
      "id": "604774c5-0c22-4099-b421-06e3f935a6ac",
      "name": "Delete event from db",
      "credentials": {
        "supabaseApi": {
          "id": "PMEiM2p42E60tuGQ",
          "name": "Supabase account"
        }
      }
    },
    {
      "parameters": {
        "operation": "getAll",
        "tableId": "={{ $('Set data').item.json.supabase_table_name }}",
        "filters": {
          "conditions": [
            {
              "keyName": "client_id",
              "condition": "eq",
              "keyValue": "={{ $('Set data').item.json.client_id }}"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.supabase",
      "typeVersion": 1,
      "position": [
        400,
        -220
      ],
      "id": "f13fc292-0af7-4ae5-8a39-2a96d1cdefe0",
      "name": "Supabase",
      "alwaysOutputData": true,
      "credentials": {
        "supabaseApi": {
          "id": "PMEiM2p42E60tuGQ",
          "name": "Supabase account"
        }
      }
    },
    {
      "parameters": {
        "operation": "get",
        "calendar": {
          "__rl": true,
          "value": "={{ $json.calendar_id }}",
          "mode": "id"
        },
        "eventId": "={{ $json.event_id }}",
        "options": {}
      },
      "type": "n8n-nodes-base.googleCalendar",
      "typeVersion": 1.3,
      "position": [
        840,
        -320
      ],
      "id": "b60abf22-9f59-4139-b69b-ea44ca4c5fb1",
      "name": "Get events",
      "credentials": {
        "googleCalendarOAuth2Api": {
          "id": "8W0dPmjbm8PtxV20",
          "name": "Google Calendar account"
        }
      }
    },
    {
      "parameters": {
        "resource": "calendar",
        "calendar": {
          "__rl": true,
          "value": "={{ $('Set data').item.json.calendar_id }}",
          "mode": "id",
          "__regex": "(^[a-zA-Z0-9.!#$%&\u2019*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*)"
        },
        "timeMin": "={{ $json.event_start }}",
        "timeMax": "={{ $json.event_end }}",
        "options": {}
      },
      "type": "n8n-nodes-base.googleCalendar",
      "typeVersion": 1.3,
      "position": [
        400,
        180
      ],
      "id": "e68ef4e1-ae5a-4e4a-bc1b-37126c281811",
      "name": "Get availability",
      "credentials": {
        "googleCalendarOAuth2Api": {
          "id": "8W0dPmjbm8PtxV20",
          "name": "Google Calendar account"
        }
      }
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "9413fb80-58a9-4761-a6ae-7e671615ade4",
              "name": "output",
              "value": "Evento creado correctamente",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        1280,
        -920
      ],
      "id": "4180fa7c-c03c-4ca5-a013-6d1f9354a778",
      "name": "Event created"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "f8e27ba3-b0e3-4eab-bbb3-b8237130fae5",
              "name": "output",
              "value": "El horario no est\u00e1 disponible",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        840,
        -720
      ],
      "id": "2fab30a9-1440-4c16-99fc-bb2e34892b61",
      "name": "Not availability"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "78cb8c8a-caaf-4a00-9658-78066e3f9127",
              "name": "output",
              "value": "Evento cancelado correctamente",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        840,
        -520
      ],
      "id": "f8774fe3-e50a-4ecd-bdae-31b642c55cb5",
      "name": "Event deleted"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "29e5a7ab-f52e-4c8e-9709-79ecd548d75f",
              "leftValue": "={{ $json.available }}",
              "rightValue": "",
              "operator": {
                "type": "boolean",
                "operation": "true",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        620,
        180
      ],
      "id": "7f1f3df9-0944-47be-9f83-8c953b9bc31c",
      "name": "If available"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "e5698980-2902-4002-b091-8c2986b05823",
              "name": "output",
              "value": "=Hay disponibilidad",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        840,
        80
      ],
      "id": "399c637b-296b-4926-b1d0-3e0176bfdf4d",
      "name": "Availbility true"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "e5698980-2902-4002-b091-8c2986b05823",
              "name": "output",
              "value": "=No hay disponibilidad",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        840,
        280
      ],
      "id": "631f5f38-9690-4154-af58-678bd0e10433",
      "name": "Availbility false"
    },
    {
      "parameters": {
        "conditions": {
          "options": {
            "caseSensitive": true,
            "leftValue": "",
            "typeValidation": "strict",
            "version": 2
          },
          "conditions": [
            {
              "id": "0e96bdaf-efb5-43b9-964a-1c1383766552",
              "leftValue": "={{ $json.isEmpty() }}",
              "rightValue": "",
              "operator": {
                "type": "boolean",
                "operation": "false",
                "singleValue": true
              }
            }
          ],
          "combinator": "and"
        },
        "options": {}
      },
      "type": "n8n-nodes-base.if",
      "typeVersion": 2.2,
      "position": [
        620,
        -220
      ],
      "id": "cabde541-fa27-48d0-829a-8cdb18f90100",
      "name": "If there is events"
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "f499c080-1480-43d4-91cb-7fc6b0772cb3",
              "name": "output",
              "value": "No encontr\u00e9 turnos agendados",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        840,
        -120
      ],
      "id": "57d555ec-d91b-4210-87c3-d2f9d6b66e7d",
      "name": "No events"
    },
    {
      "parameters": {
        "operation": "update",
        "calendar": {
          "__rl": true,
          "value": "={{ $('Set data').item.json.calendar_id }}",
          "mode": "id"
        },
        "eventId": "={{ $('Set data').item.json.event_id }}",
        "updateFields": {
          "end": "={{ $('Set data').item.json.event_end }}",
          "start": "={{ $('Set data').item.json.event_start }}"
        }
      },
      "type": "n8n-nodes-base.googleCalendar",
      "typeVersion": 1.3,
      "position": [
        400,
        -20
      ],
      "id": "cde5c04c-dad0-4254-8e02-d629121fa441",
      "name": "Update an event",
      "credentials": {
        "googleCalendarOAuth2Api": {
          "id": "8W0dPmjbm8PtxV20",
          "name": "Google Calendar account"
        }
      }
    },
    {
      "parameters": {
        "assignments": {
          "assignments": [
            {
              "id": "9413fb80-58a9-4761-a6ae-7e671615ade4",
              "name": "output",
              "value": "Evento actualizado correctamente",
              "type": "string"
            }
          ]
        },
        "options": {}
      },
      "type": "n8n-nodes-base.set",
      "typeVersion": 3.4,
      "position": [
        620,
        -20
      ],
      "id": "aa129c8d-b6e4-4721-9580-cbad031d59e2",
      "name": "Event updated"
    }
  ],
  "connections": {
    "When Executed by Another Workflow": {
      "main": [
        [
          {
            "node": "Set data",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If": {
      "main": [
        [
          {
            "node": "Create event",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Not availability",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Switch": {
      "main": [
        [
          {
            "node": "Check availability",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Delete event",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Supabase",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Get availability",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Update an event",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Set data": {
      "main": [
        [
          {
            "node": "Switch",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Check availability": {
      "main": [
        [
          {
            "node": "If",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Create event": {
      "main": [
        [
          {
            "node": "Add event to db",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Add event to db": {
      "main": [
        [
          {
            "node": "Event created",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Delete event": {
      "main": [
        [
          {
            "node": "Delete event from db",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Delete event from db": {
      "main": [
        [
          {
            "node": "Event deleted",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Supabase": {
      "main": [
        [
          {
            "node": "If there is events",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Get availability": {
      "main": [
        [
          {
            "node": "If available",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If available": {
      "main": [
        [
          {
            "node": "Availbility true",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "Availbility false",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "If there is events": {
      "main": [
        [
          {
            "node": "Get events",
            "type": "main",
            "index": 0
          }
        ],
        [
          {
            "node": "No events",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "Update an event": {
      "main": [
        [
          {
            "node": "Event updated",
            "type": "main",
            "index": 0
          }
        ]
      ]
    }
  },
  "settings": {
    "executionOrder": "v1"
  }
}