{
  "name": "language-detector - v1",
  "nodes": [
    {
      "parameters": {
        "workflowInputs": {
          "values": [
            {
              "name": "user_message"
            },
            {
              "name": "default_language"
            }
          ]
        }
      },
      "type": "n8n-nodes-base.executeWorkflowTrigger",
      "typeVersion": 1.1,
      "position": [
        -192,
        80
      ],
      "id": "70093ee6-6d7f-427d-8197-392dd487c759",
      "name": "When Executed by Another Workflow"
    },
    {
      "parameters": {
        "promptType": "define",
        "text": "={{ $json.user_message }}",
        "options": {
          "systemMessage": "=Your task is to return the language of the user's message.\n\n## Examples:\n\n**User message:**  \n\"Este es un mensaje en espa\u00f1ol.\"  \n**You should return:**  \n\"Spanish\"\n\n**User message:**  \n\"This is an English message.\"  \n**You should return:**  \n\"English\"\n\n---\n\n## Special case:\n\n### Special case 1:\n\nIf the message contains a section like:\n\nImage: [image description]\nText: [some user input]\n\n- Only consider the content after **\"Text:\"**.\n- Ignore the language of the image description.\n- If there is **nothing after \"Text:\"**, assume the language is **`{{ $json.default_language }}`**.\n\n### Special case 2:\n\nIf the message contains a section like:\n\nAudio: [audio transcription]\nText: [some user input]\n\n- Only consider the content after **\"Text:\"**.\n- If there is **nothing after \"Text:\"**, considerer the language of the audio transcription.\n\n---\n\n**User message:** `{{ $json.user_message }}`\n\n**Return only the name of the detected language in `{{ $json.default_language }}`**\n"
        }
      },
      "type": "@n8n/n8n-nodes-langchain.agent",
      "typeVersion": 1.9,
      "position": [
        32,
        80
      ],
      "id": "0d42ea16-3271-4bc5-aebf-134b59b177c1",
      "name": "AI Agent"
    },
    {
      "parameters": {
        "model": {
          "__rl": true,
          "value": "gpt-4o-mini",
          "mode": "list",
          "cachedResultName": "gpt-4o-mini"
        },
        "options": {}
      },
      "type": "@n8n/n8n-nodes-langchain.lmChatOpenAi",
      "typeVersion": 1.2,
      "position": [
        128,
        304
      ],
      "id": "cab59eef-d233-43a6-b10c-2f5381c25a4b",
      "name": "OpenAI Chat Model",
      "credentials": {
        "openAiApi": {
          "id": "3asqIn4mAiOhjOct",
          "name": "OpenAi account"
        }
      }
    }
  ],
  "connections": {
    "When Executed by Another Workflow": {
      "main": [
        [
          {
            "node": "AI Agent",
            "type": "main",
            "index": 0
          }
        ]
      ]
    },
    "OpenAI Chat Model": {
      "ai_languageModel": [
        [
          {
            "node": "AI Agent",
            "type": "ai_languageModel",
            "index": 0
          }
        ]
      ]
    }
  },
  "settings": {
    "executionOrder": "v1"
  }
}